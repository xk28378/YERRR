import unittest

from project_cryptography import rsa_decrypt_cipher

class TestRsaDecryptCipher(unittest.TestCase):

    def test_1(self):
        n = 95227212876013852606141936487408457389030768203287853383440699766155652818925788411002811930113760151068686735736921110291189712569284159153651833457139052207960355304249715916897566312030568573486493887754835297409676322474158988064568832007163097167061619719765711455488112912975643752723589592360220039603
        d = 44018084240443774522032803209630465357634589498304808434898645936126452942559742345894978174326964157902784625057819065797355709791017201235954150131915420643568572623185445027039378830845093021752473656428931312638609500396312884939793882325235813212876050848157728154661696018674309415688607435518183864529
        c = 93554524941749554583135739318755718863804118169107103979614364309344161181481016644261749796414423649231821684670956594417703378713212173718269217299608923537375252727299825761521339278445997904368078008099189412430032956631617175801325986068351235923759998687647251513493985567715033533061791101860588007406
        m_expected = 18649907482227360317561106456593491216

        m = rsa_decrypt_cipher(n, d, c)
        self.assertEqual(m, m_expected)

if __name__ == '__main__':
    unittest.main()
